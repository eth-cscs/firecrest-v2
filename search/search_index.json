{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["trimmer"]},"docs":[{"location":"","title":"FirecREST v2","text":"<p>A lightweight REST API for accessing HPC resources.</p> <p>FirecREST is a high performance proxy providing a standardized interface to access HPC infrastructures from the web, with authentication and authorization, supporting multiple schedulers, storages, and filesystems types.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\udd10 Authentication and authorization layer integrating OAuth v2 and OpenFGA</li> <li>\u26a1 High-performance RESTful API powered by asyncIO</li> <li>\u2728 Abstracts underlying HPC technology (schedulers, filesystems, storage, etc.)</li> <li>\ud83d\udce1 Async SSH connection pool enabling high-throughput regime</li> <li>\ud83e\ude7a Integrated HPC cluster health checker</li> <li>\ud83d\udca0 Modular architecture with a lightweight and modern stack</li> </ul>"},{"location":"api/","title":"FirecREST API Specification","text":"<ul> <li>Swagger docs</li> </ul>"},{"location":"getting_started/","title":"Getting started","text":""},{"location":"getting_started/#quick-start","title":"Quick start","text":"<p>The FirecREST demo allows you to run FirecREST on your machine and connect to your local HPC cluster using your personal credentials. This setup is for illustrative and evaluation purposes only and is not intended for production use.</p>"},{"location":"getting_started/#running-the-firecrest-v2-demo-launcher","title":"Running the FirecREST v2 Demo Launcher","text":"<p>Ensure that Docker is installed and running on your machine, then execute the following command to start the FirecREST v2 demo container:</p> <pre><code>docker run -p 8025:8025 -p 5025:5025  -p 3000:3000 --pull always ghcr.io/eth-cscs/firecrest-v2-demo:latest\n</code></pre> <p>Once the container is running, open your browser and navigate to:</p> <p>\u27a1\ufe0f http://localhost:8025/</p>"},{"location":"getting_started/#trying-firecrest-in-a-full-docker-environment","title":"Trying FirecREST in a full docker environment","text":"<p>To test and debug FirecREST locally we provide a local Docker environment that already contain all required dependencies (Slurm cluster, identity provider, storage, etc.). Please make sure Docker is installed and running on your machine.</p> <p>To start a local Firecrest environment in VS Code right click the selected environment (e.g.\"docker-compose.yml\") and select \"Compose up\"</p> <p>Alternatively, use the command line: <pre><code>docker compose -f docker-compose.yml up\n</code></pre></p>"},{"location":"getting_started/#local-environment","title":"Local Environment","text":"<p>The environment comes with an identity provider (Keycloack) for authentication, a dummy hpc cluster (with Slurm) and a storage service.</p>"},{"location":"getting_started/#users","title":"Users","text":"<p>The environment comes with two predefined users:</p> <ul> <li>fireuser this account represents an actual user</li> <li>firesrv this account represents a service account </li> </ul>"},{"location":"getting_started/#accessing-firecrest","title":"Accessing Firecrest","text":"<ul> <li>The Firecrest endpoints are accessible at: http://localhost:8000/</li> <li>The Firecrest API swagger: http://localhost:8000/docs and http://localhost:8000/redoc</li> </ul> <p>To access most of the end-points you need an authorization token. Firecrest authorization is based on the standard Oauth2 Client Credentials Flow</p> <p>All local environments come with pre-configured test credentials:</p> <pre><code>client: firecrest-test-client\nsecret: wZVHVIEd9dkJDh9hMKc6DTvkqXxnDttk\n</code></pre> <p>To obtain an access token you can either use the Authorize button in the swagger documentation or directly access Keycloack's Oauth2 token end-point: <pre><code>CLIENT_ID=\"&lt;client&gt;\"\nCLIENT_SECRET=\"&lt;secret&gt;\"\ncurl -X POST http://localhost:8080/auth/realms/kcrealm/protocol/openid-connect/token \\\n     -d \"grant_type=client_credentials\" -d \"client_id=$CLIENT_ID\" -d \"client_secret=$CLIENT_SECRET\" \\\n     -H \"Content-Type: application/x-www-form-urlencoded\" -H \"Accept: */*\"\n</code></pre></p>"},{"location":"getting_started/#example","title":"Example","text":"<ul> <li>List filesystem</li> <li>Run a job</li> </ul>"},{"location":"setup/arch/","title":"Architecture of FirecREST","text":""},{"location":"setup/arch/#explain-how-systems-and-schedulers-are-configured","title":"Explain how systems and schedulers are configured","text":""},{"location":"setup/arch/#explain-how-authenticationauthorization-is-configured","title":"Explain how Authentication/Authorization is configured","text":""},{"location":"setup/arch/#explain-how-health-checks-are-configured","title":"Explain how Health Checks are configured","text":""},{"location":"setup/arch/#explain-how-data-transfers-are-managed-s3-scheduler-etc","title":"Explain how Data Transfers are managed (S3, scheduler, etc)","text":""},{"location":"setup/conf/","title":"FirecREST-v2 Configuration","text":"<p>How to edit the <code>firecrest-config.yaml</code> file</p> <ul> <li>Systems (clusters) and schedulers</li> <li>Authentication/Authorization</li> <li>Service account and health checks</li> <li>Storage</li> </ul>"},{"location":"setup/deploy/","title":"FirecREST-v2 Deployment","text":""},{"location":"setup/deploy/#helm-charts","title":"Helm Charts","text":"<p>This repository includes a Helm chart to deploy FirecREST version 2.</p>"},{"location":"setup/deploy/#fetching-the-repository","title":"Fetching the repository","text":"<pre><code>helm repo add firecrest-v2 https://eth-cscs.github.io/firecrest-v2/charts/\nhelm repo update\n</code></pre> <p>The available versions can be listed with <pre><code>helm search repo firecrest-v2/firecrest-api --versions\n</code></pre></p> <p>Deploying the chart <pre><code>helm install --create-namespace &lt;deployment-name&gt; -n &lt;namespace&gt; firecrest-v2/firecrest-api --values values.yaml\n</code></pre></p>"},{"location":"use_cases/","title":"FirecREST use cases","text":"<ul> <li>CI/CD pipeline</li> <li>Workflow orchestrators</li> <li>JupyterHub</li> <li>More...</li> </ul>"},{"location":"user_guide/","title":"User Guide","text":"<ul> <li>Authentication (OIDC)</li> <li>Explain how the Staging area works for External Transfers</li> <li>Difference between blocking and non-blocking data transfer</li> <li>Usage of API</li> <li>Link to the API Ref</li> <li>Usage of SDK</li> <li>Link to pyFirecREST Ref</li> </ul>"}]}